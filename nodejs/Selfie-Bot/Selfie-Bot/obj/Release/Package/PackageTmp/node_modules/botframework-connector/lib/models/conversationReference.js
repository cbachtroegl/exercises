/*
 * Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the ConversationReference class.
 * @constructor
 * An object relating to a particular point in a conversation
 *
 * @member {string} [activityId] (Optional) ID of the activity to refer to
 *
 * @member {object} [user] (Optional) User participating in this conversation
 *
 * @member {string} [user.id] Channel id for the user or bot on this channel
 * (Example: joe@smith.com, or @joesmith or 123456)
 *
 * @member {string} [user.name] Display friendly name
 *
 * @member {object} [bot] Bot participating in this conversation
 *
 * @member {string} [bot.id] Channel id for the user or bot on this channel
 * (Example: joe@smith.com, or @joesmith or 123456)
 *
 * @member {string} [bot.name] Display friendly name
 *
 * @member {object} [conversation] Conversation reference
 *
 * @member {boolean} [conversation.isGroup] Is this a reference to a group
 *
 * @member {string} [conversation.id] Channel id for the user or bot on this
 * channel (Example: joe@smith.com, or @joesmith or 123456)
 *
 * @member {string} [conversation.name] Display friendly name
 *
 * @member {string} [channelId] Channel ID
 *
 * @member {string} [serviceUrl] Service endpoint where operations concerning
 * the referenced conversation may be performed
 *
 */
class ConversationReference {
  constructor() {
  }

  /**
   * Defines the metadata of ConversationReference
   *
   * @returns {object} metadata of ConversationReference
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ConversationReference',
      type: {
        name: 'Composite',
        className: 'ConversationReference',
        modelProperties: {
          activityId: {
            required: false,
            serializedName: 'activityId',
            type: {
              name: 'String'
            }
          },
          user: {
            required: false,
            serializedName: 'user',
            type: {
              name: 'Composite',
              className: 'ChannelAccount'
            }
          },
          bot: {
            required: false,
            serializedName: 'bot',
            type: {
              name: 'Composite',
              className: 'ChannelAccount'
            }
          },
          conversation: {
            required: false,
            serializedName: 'conversation',
            type: {
              name: 'Composite',
              className: 'ConversationAccount'
            }
          },
          channelId: {
            required: false,
            serializedName: 'channelId',
            type: {
              name: 'String'
            }
          },
          serviceUrl: {
            required: false,
            serializedName: 'serviceUrl',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ConversationReference;
